#!/bin/sh -l
set -e

if [ -n "$PLUGIN_BRANCH" ]; then
  export BRANCH="$PLUGIN_BRANCH"
fi
if [ -n "$PLUGIN_COMMAND" ]; then
  export COMMAND="$PLUGIN_COMMAND"
fi
if [ -n "$PLUGIN_GIT_REMOTE_URL" ]; then
  export GIT_REMOTE_URL="$PLUGIN_GIT_REMOTE_URL"
fi
if [ -n "$PLUGIN_GIT_PUSH_FLAGS" ]; then
  export GIT_PUSH_FLAGS="$PLUGIN_GIT_PUSH_FLAGS"
fi
if [ -n "$PLUGIN_REVIEW_APP_NAME" ]; then
  export REVIEW_APP_NAME="$PLUGIN_REVIEW_APP_NAME"
fi

if [ -z "$BRANCH" ]; then
  BRANCH="master"
fi

setup-ssh

commit_sha="$(parse-ci-commit)"
app_name="$(parse-app-name)"
ssh_remote="ssh://dokku@$(parse-ssh-host):$(parse-ssh-port)"

if [ "$COMMAND" = "review-apps:create" ] || [ "$COMMAND" = 'review-apps:destroy' ]; then
  if [ -z "$REVIEW_APP_NAME" ]; then
    CI_BRANCH_NAME="$(parse-ci-branch-name)"
    if [ -z "$CI_BRANCH_NAME" ]; then
      log-error "Unable to detect branch name and cannot generate review app name"
      exit 1
    fi

    REVIEW_APP_NAME="review-${app_name}-${CI_BRANCH_NAME}"
    log-info "No review app name specified, using $REVIEW_APP_NAME"
  fi
fi

if [ "$COMMAND" = "review-apps:destroy" ]; then
  log-info "Destroying review app '${REVIEW_APP_NAME}'"
  ssh "$ssh_remote" -- --force apps:destroy "$REVIEW_APP_NAME"
  exit 0
fi

if [ "$COMMAND" = "git:from-image" ]; then
  if [-z "$IMAGE_NAME"]; then
    log-error "No docker image specified"
    exit 1
  fi

  ssh "$ssh_remote" -- git:from-image "$app_name" "$IMAGE_NAME"
  exit 0
fi

if [ -n "$COMMAND" ] && [ "$COMMAND" != "review-apps:create" ] && [ "$COMMAND" != "deploy" ]; then
  log-error "Invalid command specified"
  exit 1
fi

if [ -z "$commit_sha" ]; then
  log-error "Unable to detect commit sha"
  exit 1
fi



if [ "$COMMAND" = "review-apps:create" ]; then
  log-info "Ensuring review app '${REVIEW_APP_NAME}' exists"
  ssh "$ssh_remote" -- apps:clone --skip-deploy --ignore-existing "$app_name" "$REVIEW_APP_NAME"
fi

log-info "Pushing to Dokku Host"

if [ -n "$REVIEW_APP_NAME" ] && [ "$app_name" != "$REVIEW_APP_NAME" ]; then
  GIT_REMOTE_URL="${GIT_REMOTE_URL%"/$app_name"}/${REVIEW_APP_NAME}"
fi

# shellcheck disable=SC2086
git push $GIT_PUSH_FLAGS "$GIT_REMOTE_URL" "$commit_sha:refs/heads/$BRANCH"
